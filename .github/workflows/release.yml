name: Release

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 16

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created:  ${{ steps.prep-release.outputs.releases_created }}
      prs_exist: ${{ steps.prep-release.outputs.prs || 'false' }}
    steps:
      - name: Prep release
        id: prep-release
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest

  update-lockfile:
    name: Update release PR with lockfile updates
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created != 'true' && needs.release-please.outputs.prs_exist != 'false'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release-please--branches--main
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update package-lock.json
        run: npm install --no-audit --no-fund --ignore-scripts --package-lock-only
      - name: Merge changes with last commit
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit --amend --no-edit
          git push -f

  npm-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npx nx run-many --target build
      - run: npm publish -ws
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  canary-release:
    name: Release canary versions to NPM
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created != 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npx nx run-many --target build
      - run: npx lerna publish --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
