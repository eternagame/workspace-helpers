{
  "$schema": "https://json.schemastore.org/tsconfig",
  "compileOnSave": false,
  "compilerOptions": {
    // Modules
    "module": "es2020",
    "moduleResolution": "node",

    // Emit
    "sourceMap": true,
    "declaration": true,
    "declarationMap": true,
    "importHelpers": true,
    // Needed for Vue <script setup>, included here for consistency across our codebases
    "preserveValueImports": true,
    // Since we have preserveValueImports enabled, this will ensure that we don't import values
    // when we only need the types
    "importsNotUsedAsValues": "error",

    // Language and Environment
    // Our target and built-ins reflect the lowest common denominator we need to support for
    // isomorphic projects. Currently, that is determined by what Node 12 (oldest LTS) supports.
    "target": "es2019",
    "lib": ["es2019", "es2020.promise", "es2020.bigint", "es2020.string"],
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    // This will be automatically enabled for target ES2022, but we'll enable it now for future-proofing
    "useDefineForClassFields": true,

    // Projects
    "composite": true,

    // Completeness
    "skipLibCheck": true,
    "skipDefaultLibCheck": true,

    // Interop Constraints
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    // Required for Vite
    "isolatedModules": true,

    // Type Checking
    // We'll basically make things as strict as possible, including letting typescript handle some things
    // that eslint could technically do (but it will probably do better)
    "strict": true,
    "exactOptionalPropertyTypes": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noPropertyAccessFromIndexSignature": true,
    "noUncheckedIndexedAccess": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true
  }
}
